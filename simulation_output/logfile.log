2017-12-05 13:55:49,929  INFO Gbl:57 JVM: 1.8.0_141; Oracle Corporation; mixed mode; 64-bit
2017-12-05 13:55:49,930  INFO Gbl:61 OS: Windows 10; 10.0; amd64
2017-12-05 13:55:49,930  INFO Gbl:64 CPU cores: 4
2017-12-05 13:55:49,931  INFO Gbl:65 max. Memory: 1801.0MB (1888485376B)
2017-12-05 13:55:49,931  INFO Gbl:103 MATSim-Build: r2ddbc3d4ba23e13180ec0bc334dbf637a66e7c66 (2017-05-23 11:45:30)
2017-12-05 13:55:49,932  INFO AbstractController:58 Used Controler-Class: org.matsim.core.controler.NewControler
2017-12-05 13:55:49,932  INFO Config:537 ConfigConsistencyChecker with runtime type=class org.matsim.core.config.consistency.ConfigConsistencyCheckerImpl was already added; not adding it a second time
2017-12-05 13:55:49,933  INFO Injector:77 org.matsim.api.core.v01.Scenario 
2017-12-05 13:55:49,933  INFO Injector:78    -> of(org.matsim.core.scenario.MutableScenario@4e928fbf)
2017-12-05 13:55:49,935  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.api.core.v01.Scenario, annotation=[none]], source=org.matsim.core.scenario.ScenarioByInstanceModule.install(ScenarioByInstanceModule.java:31), instance=org.matsim.core.scenario.MutableScenario@4e928fbf}
2017-12-05 13:55:49,935  INFO Injector:77 org.matsim.api.core.v01.population.Population 
2017-12-05 13:55:49,944  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)
2017-12-05 13:55:49,945  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.Population, annotation=[none]], source=org.matsim.api.core.v01.population.Population org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)}
2017-12-05 13:55:49,945  INFO Injector:77 org.matsim.api.core.v01.population.PopulationFactory 
2017-12-05 13:55:49,945  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)
2017-12-05 13:55:49,946  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.population.PopulationFactory, annotation=[none]], source=org.matsim.api.core.v01.population.PopulationFactory org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(org.matsim.api.core.v01.population.Population), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)}
2017-12-05 13:55:49,946  INFO Injector:77 org.matsim.facilities.ActivityFacilities 
2017-12-05 13:55:49,946  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)
2017-12-05 13:55:49,946  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.facilities.ActivityFacilities, annotation=[none]], source=org.matsim.facilities.ActivityFacilities org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)}
2017-12-05 13:55:49,946  INFO Injector:77 org.matsim.households.Households 
2017-12-05 13:55:49,946  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)
2017-12-05 13:55:49,946  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.households.Households, annotation=[none]], source=org.matsim.households.Households org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)}
2017-12-05 13:55:49,946  INFO Injector:77 org.matsim.api.core.v01.network.Network 
2017-12-05 13:55:49,946  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)
2017-12-05 13:55:49,946  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.api.core.v01.network.Network, annotation=[none]], source=org.matsim.api.core.v01.network.Network org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)}
2017-12-05 13:55:49,947  INFO Injector:77 org.matsim.vehicles.Vehicles 
2017-12-05 13:55:49,947  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)
2017-12-05 13:55:49,947  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.vehicles.Vehicles, annotation=[none]], source=org.matsim.vehicles.Vehicles org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)}
2017-12-05 13:55:49,947  INFO Injector:77 org.matsim.lanes.data.Lanes 
2017-12-05 13:55:49,947  INFO Injector:78    -> @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)
2017-12-05 13:55:49,947  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.lanes.data.Lanes, annotation=[none]], source=org.matsim.lanes.data.Lanes org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(org.matsim.api.core.v01.Scenario), scope=Scopes.NO_SCOPE, provider=@Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)}
2017-12-05 13:55:49,948  INFO Injector:77 org.matsim.core.controler.ControlerI 
2017-12-05 13:55:49,948  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2b72cb8a}[Scopes.SINGLETON]
2017-12-05 13:55:49,948  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:8), scope=eager singleton, target=Key[type=org.matsim.core.controler.NewControler, annotation=[none]]}
2017-12-05 13:55:49,949  INFO Injector:77 org.matsim.core.controler.ControlerListenerManager 
2017-12-05 13:55:49,949  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2fba3fc4[Scopes.SINGLETON]}
2017-12-05 13:55:49,949  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:10), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]]}
2017-12-05 13:55:49,950  INFO Injector:77 org.matsim.core.controler.PrepareForSim 
2017-12-05 13:55:49,950  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@62833051}
2017-12-05 13:55:49,950  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.PrepareForSimImpl, annotation=[none]]}
2017-12-05 13:55:49,950  INFO Injector:77 org.matsim.core.controler.TerminationCriterion 
2017-12-05 13:55:49,950  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@266374ef}
2017-12-05 13:55:49,950  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:14), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.TerminateAtFixedIterationNumber, annotation=[none]]}
2017-12-05 13:55:49,950  INFO Injector:77 org.matsim.core.controler.MatsimServices 
2017-12-05 13:55:49,951  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@a82c5f1}
2017-12-05 13:55:49,951  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:15), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.MatsimServicesImpl, annotation=[none]]}
2017-12-05 13:55:49,951  INFO Injector:77 org.matsim.core.controler.corelisteners.PlansScoring 
2017-12-05 13:55:49,954  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@766653e6[Scopes.SINGLETON]}
2017-12-05 13:55:49,954  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], source=org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.PlansScoringImpl, annotation=[none]]}
2017-12-05 13:55:49,954  INFO Injector:77 org.matsim.core.controler.corelisteners.PlansReplanning 
2017-12-05 13:55:49,962  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3b79fd76[Scopes.SINGLETON]}
2017-12-05 13:55:49,977  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:38), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.PlansReplanningImpl, annotation=[none]]}
2017-12-05 13:55:49,977  INFO Injector:77 org.matsim.core.controler.corelisteners.PlansDumping 
2017-12-05 13:55:49,979  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6b6776cb[Scopes.SINGLETON]}
2017-12-05 13:55:49,979  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:39), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.PlansDumpingImpl, annotation=[none]]}
2017-12-05 13:55:49,980  INFO Injector:77 org.matsim.core.controler.corelisteners.EventsHandling 
2017-12-05 13:55:49,980  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@55c53a33[Scopes.SINGLETON]}
2017-12-05 13:55:49,980  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:40), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.EventsHandlingImpl, annotation=[none]]}
2017-12-05 13:55:49,980  INFO Injector:77 org.matsim.core.controler.corelisteners.DumpDataAtEnd 
2017-12-05 13:55:49,980  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@26df6e3a[Scopes.SINGLETON]}
2017-12-05 13:55:49,980  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], source=org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:41), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEndImpl, annotation=[none]]}
2017-12-05 13:55:49,980  INFO Injector:77 org.matsim.core.api.experimental.events.EventsManager 
2017-12-05 13:55:49,982  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@52e7a6b2}[Scopes.SINGLETON]
2017-12-05 13:55:49,982  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:23), scope=eager singleton, target=Key[type=org.matsim.core.events.SimStepParallelEventsManagerImpl, annotation=[none]]}
2017-12-05 13:55:49,982  INFO Injector:77 org.matsim.core.mobsim.framework.Mobsim 
2017-12-05 13:55:49,982  INFO Injector:78    -> Key[type=org.matsim.core.mobsim.qsim.QSimProvider, annotation=[none]]
2017-12-05 13:55:49,982  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.framework.Mobsim, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimModule.configure(QSimModule.java:27), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.mobsim.qsim.QSimProvider, annotation=[none]]}
2017-12-05 13:55:49,983  INFO Injector:77 org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory 
2017-12-05 13:55:49,983  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6f6745d6}
2017-12-05 13:55:49,983  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory, annotation=[none]], source=org.matsim.core.mobsim.qsim.QSimModule.configure(QSimModule.java:39), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.DefaultQNetworkFactory, annotation=[none]]}
2017-12-05 13:55:49,983  INFO Injector:77 org.matsim.core.router.util.TravelTime @com.google.inject.name.Named(value=car)
2017-12-05 13:55:49,983  INFO Injector:78    -> Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]
2017-12-05 13:55:49,984  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:76), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2017-12-05 13:55:49,984  INFO Injector:77 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.name.Named(value=car)
2017-12-05 13:55:49,984  INFO Injector:78    -> of(org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@379614be)
2017-12-05 13:55:49,984  INFO Injector:79   ==full==> InstanceBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.costcalculators.TravelDisutilityModule.install(TravelDisutilityModule.java:34), instance=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@379614be}
2017-12-05 13:55:49,985  INFO Injector:77 org.matsim.core.scoring.ScoringFunctionFactory 
2017-12-05 13:55:49,985  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6986852}
2017-12-05 13:55:49,985  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], source=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionFactory, annotation=[none]]}
2017-12-05 13:55:49,985  INFO Injector:77 org.matsim.core.scoring.functions.ScoringParametersForPerson 
2017-12-05 13:55:49,985  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.scoring.functions.ScoringParametersForPerson, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2b9ed6da}
2017-12-05 13:55:49,985  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.functions.ScoringParametersForPerson, annotation=[none]], source=org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:33), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.scoring.functions.SubpopulationScoringParameters, annotation=[none]]}
2017-12-05 13:55:49,985  INFO Injector:77 org.matsim.core.scoring.ExperiencedPlansService 
2017-12-05 13:55:49,985  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@59d4cd39}[Scopes.SINGLETON]
2017-12-05 13:55:49,985  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlansModule.install(ExperiencedPlansModule.java:10), scope=eager singleton, target=Key[type=org.matsim.core.scoring.ExperiencedPlansServiceImpl, annotation=[none]]}
2017-12-05 13:55:49,986  INFO Injector:77 org.matsim.core.router.MainModeIdentifier 
2017-12-05 13:55:49,986  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4b34fff9}
2017-12-05 13:55:49,987  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:44), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.MainModeIdentifierImpl, annotation=[none]]}
2017-12-05 13:55:49,987  INFO Injector:77 org.matsim.core.router.util.LeastCostPathCalculatorFactory 
2017-12-05 13:55:49,987  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@78a773fd[Scopes.SINGLETON]}
2017-12-05 13:55:49,987  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], source=org.matsim.core.router.LeastCostPathCalculatorModule.install(LeastCostPathCalculatorModule.java:40), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.util.DijkstraFactory, annotation=[none]]}
2017-12-05 13:55:49,987  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=ride)
2017-12-05 13:55:49,987  INFO Injector:78    -> org.matsim.core.router.FreespeedFactorRouting@273e7444
2017-12-05 13:55:49,987  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.FreespeedFactorRouting@273e7444}
2017-12-05 13:55:49,987  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=pt)
2017-12-05 13:55:49,987  INFO Injector:78    -> org.matsim.core.router.FreespeedFactorRouting@7db12bb6
2017-12-05 13:55:49,988  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.FreespeedFactorRouting@7db12bb6}
2017-12-05 13:55:49,988  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=bike)
2017-12-05 13:55:49,988  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@783a467b
2017-12-05 13:55:49,988  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@783a467b}
2017-12-05 13:55:49,988  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=walk)
2017-12-05 13:55:49,988  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@272113c4
2017-12-05 13:55:49,988  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@272113c4}
2017-12-05 13:55:49,988  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=access_walk)
2017-12-05 13:55:49,988  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@73e9cf30
2017-12-05 13:55:49,989  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@73e9cf30}
2017-12-05 13:55:49,989  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=egress_walk)
2017-12-05 13:55:49,989  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@771a660
2017-12-05 13:55:49,989  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@771a660}
2017-12-05 13:55:49,989  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=undefined)
2017-12-05 13:55:49,989  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@2d52216b
2017-12-05 13:55:49,989  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@2d52216b}
2017-12-05 13:55:49,989  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=outside)
2017-12-05 13:55:49,989  INFO Injector:78    -> org.matsim.core.router.BeelineTeleportationRouting@242b836
2017-12-05 13:55:49,989  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=outside)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.BeelineTeleportationRouting@242b836}
2017-12-05 13:55:49,989  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=car)
2017-12-05 13:55:49,990  INFO Injector:78    -> org.matsim.core.router.NetworkRouting@3f6f6701
2017-12-05 13:55:49,990  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:66), scope=Scopes.NO_SCOPE, provider=org.matsim.core.router.NetworkRouting@3f6f6701}
2017-12-05 13:55:49,990  INFO Injector:77 org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person> 
2017-12-05 13:55:49,990  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7c51f34b}
2017-12-05 13:55:49,990  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:49), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.selectors.WorstPlanForRemovalSelector, annotation=[none]]}
2017-12-05 13:55:49,990  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=ChangeExpBeta)
2017-12-05 13:55:49,990  INFO Injector:78    -> Key[type=org.matsim.core.replanning.strategies.ChangeExpBeta, annotation=[none]]
2017-12-05 13:55:49,990  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ChangeExpBeta)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:85), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.ChangeExpBeta, annotation=[none]]}
2017-12-05 13:55:49,990  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.name.Named(value=ReRoute)
2017-12-05 13:55:49,990  INFO Injector:78    -> Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]
2017-12-05 13:55:49,990  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)], source=org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:98), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]}
2017-12-05 13:55:49,991  INFO Injector:77 org.matsim.core.replanning.ReplanningContext 
2017-12-05 13:55:49,991  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7ef27d7f[Scopes.SINGLETON]}[Scopes.SINGLETON]
2017-12-05 13:55:49,991  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:48), scope=eager singleton, target=Key[type=org.matsim.core.replanning.ReplanningContextImpl, annotation=[none]]}
2017-12-05 13:55:49,991  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=41, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2017-12-05 13:55:49,992  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=41, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.ReRoute, annotation=[none]]}
2017-12-05 13:55:49,992  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=41, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:73), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ReRoute)]}
2017-12-05 13:55:49,992  INFO Injector:77 org.matsim.core.replanning.PlanStrategy @com.google.inject.multibindings.Element(setName=,uniqueId=43, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)
2017-12-05 13:55:49,992  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=43, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], provider=Key[type=org.matsim.core.replanning.strategies.ChangeExpBeta, annotation=[none]]}
2017-12-05 13:55:49,992  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=43, type=MAPBINDER, keyType=org.matsim.core.config.groups.StrategyConfigGroup$StrategySettings)], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:73), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.replanning.PlanStrategy, annotation=@com.google.inject.name.Named(value=ChangeExpBeta)]}
2017-12-05 13:55:49,992  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=45, type=MULTIBINDER, keyType=)
2017-12-05 13:55:49,992  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=45, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3b74ac8[Scopes.SINGLETON]}
2017-12-05 13:55:49,992  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=45, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:47), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]]}
2017-12-05 13:55:49,992  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=46, type=MULTIBINDER, keyType=)
2017-12-05 13:55:49,993  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=46, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1fd14d74}
2017-12-05 13:55:49,993  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=46, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:31), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LegHistogramListener, annotation=[none]]}
2017-12-05 13:55:49,993  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=47, type=MULTIBINDER, keyType=)
2017-12-05 13:55:49,993  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=47, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3eb81efb}
2017-12-05 13:55:49,993  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=47, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.LegTimesControlerListener, annotation=[none]]}
2017-12-05 13:55:49,993  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=48, type=MULTIBINDER, keyType=)
2017-12-05 13:55:49,994  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=48, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@30c8681}
2017-12-05 13:55:49,994  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=48, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:11), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.TravelDistanceStatsControlerListener, annotation=[none]]}
2017-12-05 13:55:49,994  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=49, type=MULTIBINDER, keyType=)
2017-12-05 13:55:49,994  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=49, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1f75a668[Scopes.SINGLETON]}
2017-12-05 13:55:49,994  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=49, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]}
2017-12-05 13:55:49,995  INFO Injector:77 org.matsim.analysis.ScoreStats 
2017-12-05 13:55:49,997  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1f75a668[Scopes.SINGLETON]}
2017-12-05 13:55:49,997  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:33), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]]}
2017-12-05 13:55:49,997  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=50, type=MULTIBINDER, keyType=)
2017-12-05 13:55:49,998  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=50, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4e31276e[Scopes.SINGLETON]}
2017-12-05 13:55:49,998  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=50, type=MULTIBINDER, keyType=)], source=org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:32), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]]}
2017-12-05 13:55:49,998  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=51, type=MULTIBINDER, keyType=)
2017-12-05 13:55:49,999  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=51, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5e403b4a}
2017-12-05 13:55:49,999  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=51, type=MULTIBINDER, keyType=)], source=org.matsim.counts.CountsModule.install(CountsModule.java:42), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.counts.CountsControlerListener, annotation=[none]]}
2017-12-05 13:55:49,999  INFO Injector:77 org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link> 
2017-12-05 13:55:50,000  INFO Injector:78    -> @Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)[Scopes.SINGLETON]
2017-12-05 13:55:50,001  INFO Injector:79   ==full==> ProviderInstanceBinding{key=Key[type=org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link>, annotation=[none]], source=org.matsim.counts.Counts org.matsim.counts.CountsModule.provideLinkCounts(org.matsim.api.core.v01.Scenario,org.matsim.core.config.groups.CountsConfigGroup), scope=Scopes.SINGLETON, provider=@Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)}
2017-12-05 13:55:50,001  INFO Injector:77 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=52, type=MULTIBINDER, keyType=)
2017-12-05 13:55:50,001  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=52, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@327af41b}
2017-12-05 13:55:50,001  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=52, type=MULTIBINDER, keyType=)], source=org.matsim.core.population.VspPlansCleanerModule.install(VspPlansCleanerModule.java:34), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.population.VspPlansCleaner, annotation=[none]]}
2017-12-05 13:55:50,001  INFO Injector:77 org.matsim.core.mobsim.framework.listeners.MobsimListener @com.google.inject.multibindings.Element(setName=,uniqueId=53, type=MULTIBINDER, keyType=)
2017-12-05 13:55:50,002  INFO Injector:78    -> Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]
2017-12-05 13:55:50,002  INFO Injector:79   ==full==> ProviderKeyBinding{key=Key[type=org.matsim.core.mobsim.framework.listeners.MobsimListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=53, type=MULTIBINDER, keyType=)], source=org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:45), scope=Scopes.NO_SCOPE, provider=Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]}
2017-12-05 13:55:50,002  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=54, type=MAPBINDER, keyType=java.lang.String)
2017-12-05 13:55:50,002  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=54, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@771a660}
2017-12-05 13:55:50,002  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=54, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=egress_walk)]}
2017-12-05 13:55:50,002  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=56, type=MAPBINDER, keyType=java.lang.String)
2017-12-05 13:55:50,002  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=56, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@7db12bb6}
2017-12-05 13:55:50,002  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=56, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=pt)]}
2017-12-05 13:55:50,002  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=58, type=MAPBINDER, keyType=java.lang.String)
2017-12-05 13:55:50,002  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=58, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.NetworkRouting@3f6f6701}
2017-12-05 13:55:50,002  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=58, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=car)]}
2017-12-05 13:55:50,002  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=60, type=MAPBINDER, keyType=java.lang.String)
2017-12-05 13:55:50,002  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=60, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@242b836}
2017-12-05 13:55:50,002  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=60, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=outside)]}
2017-12-05 13:55:50,002  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=62, type=MAPBINDER, keyType=java.lang.String)
2017-12-05 13:55:50,002  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=62, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@73e9cf30}
2017-12-05 13:55:50,002  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=62, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=access_walk)]}
2017-12-05 13:55:50,002  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=64, type=MAPBINDER, keyType=java.lang.String)
2017-12-05 13:55:50,002  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=64, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@273e7444}
2017-12-05 13:55:50,003  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=64, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=ride)]}
2017-12-05 13:55:50,003  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=66, type=MAPBINDER, keyType=java.lang.String)
2017-12-05 13:55:50,003  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=66, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@272113c4}
2017-12-05 13:55:50,003  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=66, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=walk)]}
2017-12-05 13:55:50,003  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=68, type=MAPBINDER, keyType=java.lang.String)
2017-12-05 13:55:50,003  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=68, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@783a467b}
2017-12-05 13:55:50,003  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=68, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=bike)]}
2017-12-05 13:55:50,003  INFO Injector:77 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=70, type=MAPBINDER, keyType=java.lang.String)
2017-12-05 13:55:50,003  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=70, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@2d52216b}
2017-12-05 13:55:50,004  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=70, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.name.Named(value=undefined)]}
2017-12-05 13:55:50,004  INFO Injector:77 org.matsim.core.router.util.TravelTime @com.google.inject.multibindings.Element(setName=,uniqueId=72, type=MAPBINDER, keyType=java.lang.String)
2017-12-05 13:55:50,004  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=72, type=MAPBINDER, keyType=java.lang.String)], provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2017-12-05 13:55:50,004  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=72, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.name.Named(value=car)]}
2017-12-05 13:55:50,004  INFO Injector:77 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.multibindings.Element(setName=,uniqueId=74, type=MAPBINDER, keyType=java.lang.String)
2017-12-05 13:55:50,004  INFO Injector:78    -> FactoryProxy{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=74, type=MAPBINDER, keyType=java.lang.String)], provider=ConstantFactory{value=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@379614be}[Scopes.SINGLETON]}
2017-12-05 13:55:50,004  INFO Injector:79   ==full==> LinkedKeyBinding{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=74, type=MAPBINDER, keyType=java.lang.String)], source=org.matsim.core.controler.Injector$3.configure(Injector.java:113), scope=Scopes.NO_SCOPE, target=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.name.Named(value=car)]}
2017-12-05 13:55:50,004  INFO Injector:77 org.matsim.core.controler.ControlerListenerManagerImpl 
2017-12-05 13:55:50,005  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@2fba3fc4[Scopes.SINGLETON]
2017-12-05 13:55:50,005  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.controler.ControlerListenerManagerImpl, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:9), scope=eager singleton}
2017-12-05 13:55:50,005  INFO Injector:77 org.matsim.analysis.IterationStopWatch 
2017-12-05 13:55:50,006  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@18e36d14[Scopes.SINGLETON]
2017-12-05 13:55:50,006  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.IterationStopWatch, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:12), scope=eager singleton}
2017-12-05 13:55:50,017  INFO Injector:77 org.matsim.core.controler.OutputDirectoryHierarchy 
2017-12-05 13:55:50,018  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@332729ad[Scopes.SINGLETON]
2017-12-05 13:55:50,018  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.controler.OutputDirectoryHierarchy, annotation=[none]], source=org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:13), scope=eager singleton}
2017-12-05 13:55:50,019  INFO Injector:77 org.matsim.core.scoring.ScoringFunctionsForPopulation 
2017-12-05 13:55:50,019  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@3370f42[Scopes.SINGLETON]
2017-12-05 13:55:50,019  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.ScoringFunctionsForPopulation, annotation=[none]], source=org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:10), scope=eager singleton}
2017-12-05 13:55:50,019  INFO Injector:77 org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator 
2017-12-05 13:55:50,019  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@6853425f[Scopes.SINGLETON]
2017-12-05 13:55:50,019  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator, annotation=[none]], source=org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:25), scope=eager singleton}
2017-12-05 13:55:50,019  INFO Injector:77 org.matsim.core.trafficmonitoring.TravelTimeCalculator 
2017-12-05 13:55:50,019  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@282cb7c7[Scopes.SINGLETON]
2017-12-05 13:55:50,019  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.trafficmonitoring.TravelTimeCalculator, annotation=[none]], source=org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:73), scope=Scopes.SINGLETON}
2017-12-05 13:55:50,019  INFO Injector:77 org.matsim.core.scoring.EventsToActivities 
2017-12-05 13:55:50,020  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@258d79be[Scopes.SINGLETON]
2017-12-05 13:55:50,020  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.EventsToActivities, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:12), scope=eager singleton}
2017-12-05 13:55:50,020  INFO Injector:77 org.matsim.core.scoring.EventsToLegs 
2017-12-05 13:55:50,020  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@5965be2d[Scopes.SINGLETON]
2017-12-05 13:55:50,020  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.scoring.EventsToLegs, annotation=[none]], source=org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:13), scope=eager singleton}
2017-12-05 13:55:50,020  INFO Injector:77 org.matsim.core.router.TripRouter 
2017-12-05 13:55:50,020  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@3b8f0a79
2017-12-05 13:55:50,020  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.TripRouter, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:43), scope=Scopes.NO_SCOPE}
2017-12-05 13:55:50,021  INFO Injector:77 org.matsim.core.router.SingleModeNetworksCache 
2017-12-05 13:55:50,021  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@3eb77ea8[Scopes.SINGLETON]
2017-12-05 13:55:50,021  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.router.SingleModeNetworksCache, annotation=[none]], source=org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:47), scope=eager singleton}
2017-12-05 13:55:50,021  INFO Injector:77 org.matsim.core.replanning.StrategyManager 
2017-12-05 13:55:50,021  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@41005828[Scopes.SINGLETON]
2017-12-05 13:55:50,021  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.core.replanning.StrategyManager, annotation=[none]], source=org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:47), scope=Scopes.SINGLETON}
2017-12-05 13:55:50,022  INFO Injector:77 org.matsim.analysis.CalcLinkStats 
2017-12-05 13:55:50,022  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@4196c360[Scopes.SINGLETON]
2017-12-05 13:55:50,022  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.CalcLinkStats, annotation=[none]], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:37), scope=eager singleton}
2017-12-05 13:55:50,022  INFO Injector:77 org.matsim.analysis.LinkStatsControlerListener 
2017-12-05 13:55:50,022  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@3b74ac8[Scopes.SINGLETON]
2017-12-05 13:55:50,022  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.LinkStatsControlerListener, annotation=[none]], source=org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:46), scope=eager singleton}
2017-12-05 13:55:50,022  INFO Injector:77 org.matsim.analysis.VolumesAnalyzer 
2017-12-05 13:55:50,023  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@571c5681[Scopes.SINGLETON]
2017-12-05 13:55:50,023  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.VolumesAnalyzer, annotation=[none]], source=org.matsim.analysis.VolumesAnalyzerModule.install(VolumesAnalyzerModule.java:31), scope=eager singleton}
2017-12-05 13:55:50,023  INFO Injector:77 org.matsim.analysis.LegHistogram 
2017-12-05 13:55:50,023  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@d278d2b
2017-12-05 13:55:50,023  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.LegHistogram, annotation=[none]], source=org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:30), scope=Scopes.NO_SCOPE}
2017-12-05 13:55:50,023  INFO Injector:77 org.matsim.analysis.CalcLegTimes 
2017-12-05 13:55:50,023  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@7fbdb894[Scopes.SINGLETON]
2017-12-05 13:55:50,023  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.CalcLegTimes, annotation=[none]], source=org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:31), scope=Scopes.SINGLETON}
2017-12-05 13:55:50,023  INFO Injector:77 org.matsim.analysis.TravelDistanceStats 
2017-12-05 13:55:50,023  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@7ceb3185[Scopes.SINGLETON]
2017-12-05 13:55:50,023  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.TravelDistanceStats, annotation=[none]], source=org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:10), scope=eager singleton}
2017-12-05 13:55:50,023  INFO Injector:77 org.matsim.analysis.ScoreStatsControlerListener 
2017-12-05 13:55:50,023  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@1f75a668[Scopes.SINGLETON]
2017-12-05 13:55:50,023  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.ScoreStatsControlerListener, annotation=[none]], source=org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:31), scope=Scopes.SINGLETON}
2017-12-05 13:55:50,023  INFO Injector:77 org.matsim.analysis.ModeStatsControlerListener 
2017-12-05 13:55:50,023  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@4e31276e[Scopes.SINGLETON]
2017-12-05 13:55:50,023  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.analysis.ModeStatsControlerListener, annotation=[none]], source=org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:31), scope=Scopes.SINGLETON}
2017-12-05 13:55:50,023  INFO Injector:77 org.matsim.counts.CountsModule$CountsInitializer 
2017-12-05 13:55:50,024  INFO Injector:78    -> com.google.inject.internal.ConstructorBindingImpl$Factory@3d246ea3[Scopes.SINGLETON]
2017-12-05 13:55:50,024  INFO Injector:79   ==full==> ConstructorBinding{key=Key[type=org.matsim.counts.CountsModule$CountsInitializer, annotation=[none]], source=org.matsim.counts.CountsModule.install(CountsModule.java:43), scope=eager singleton}
2017-12-05 13:55:50,034  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2017-12-05 13:55:50,035  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2017-12-05 13:55:50,042  INFO NetworkImpl:156  node # 1
2017-12-05 13:55:50,043  INFO NetworkImpl:156  node # 2
2017-12-05 13:55:50,043  INFO NetworkImpl:152  link # 1
2017-12-05 13:55:50,043  INFO NetworkImpl:156  node # 4
2017-12-05 13:55:50,043  INFO NetworkImpl:152  link # 2
2017-12-05 13:55:50,044  INFO NetworkImpl:152  link # 4
2017-12-05 13:55:50,044  INFO NetworkImpl:156  node # 8
2017-12-05 13:55:50,044  INFO NetworkImpl:152  link # 8
2017-12-05 13:55:50,044  INFO NetworkImpl:152  link # 16
2017-12-05 13:55:50,044  INFO NetworkImpl:156  node # 16
2017-12-05 13:55:50,044  INFO NetworkImpl:152  link # 32
2017-12-05 13:55:50,045  INFO NetworkImpl:156  node # 32
2017-12-05 13:55:50,046  INFO NetworkImpl:152  link # 64
2017-12-05 13:55:50,046  INFO NetworkImpl:156  node # 64
2017-12-05 13:55:50,047  INFO NetworkImpl:152  link # 128
2017-12-05 13:55:50,047  INFO NetworkImpl:156  node # 128
2017-12-05 13:55:50,048  INFO NetworkImpl:152  link # 256
2017-12-05 13:55:50,049  INFO NetworkImpl:156  node # 256
2017-12-05 13:55:50,050  INFO NetworkImpl:152  link # 512
2017-12-05 13:55:50,051  INFO NetworkImpl:156  node # 512
2017-12-05 13:55:50,053  INFO NetworkImpl:152  link # 1024
2017-12-05 13:55:50,055  INFO NetworkImpl:156  node # 1024
2017-12-05 13:55:50,058  INFO NetworkImpl:152  link # 2048
2017-12-05 13:55:50,060  INFO NetworkImpl:156  node # 2048
2017-12-05 13:55:50,101  INFO NetworkImpl:152  link # 4096
2017-12-05 13:55:50,105  INFO NetworkImpl:156  node # 4096
2017-12-05 13:55:50,113  INFO NetworkImpl:152  link # 8192
2017-12-05 13:55:50,124  INFO NetworkImpl:156  node # 8192
2017-12-05 13:55:50,150  INFO NetworkImpl:152  link # 16384
2017-12-05 13:55:50,173  INFO NetworkImpl:156  node # 16384
2017-12-05 13:55:50,193  INFO NetworkImpl:152  link # 32768
2017-12-05 13:55:50,230  INFO NetworkImpl:156  node # 32768
2017-12-05 13:55:50,258  INFO NetworkImpl:152  link # 65536
2017-12-05 13:55:52,118  INFO NetworkImpl:152  link # 131072
2017-12-05 13:55:52,123  INFO NetworkImpl:156  node # 65536
2017-12-05 13:55:52,152  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2017-12-05 13:55:52,153  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2017-12-05 13:55:52,153  INFO ControlerUtils:58 config dump before iterations start
2017-12-05 13:55:52,160  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>

<!-- ====================================================================== -->

	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>

<!-- ====================================================================== -->

	<module name="TimeAllocationMutator" >

		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />

		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />

		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>

<!-- ====================================================================== -->

	<module name="astra" >
		<param name="crossingPenalty" value="3.0" />
		<param name="freespeedFactor" value="1.0" />
		<param name="modeChoice" value="false" />
	</module>

<!-- ====================================================================== -->

<!-- ====================================================================== -->

	<module name="changeMode" >
		<param name="ignoreCarAvailability" value="true" />
		<param name="modes" value="car,pt" />
	</module>

<!-- ====================================================================== -->

	<module name="controler" >

		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="true" />

		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="true" />

		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />

		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />

		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />

		<!-- Default=1000;  -->
		<param name="lastIteration" value="100" />

		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />

		<param name="outputDirectory" value="simulation_output" />

		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="deleteDirectoryIfExists" />

		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />

		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />

		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />

		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="10" />

		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="10" />

		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>

<!-- ====================================================================== -->

	<module name="counts" >

		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />

		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="facilities" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<param name="inputFacilitiesFile" value="astra_facilities.xml.gz" />
		<param name="inputFacilityAttributesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="global" >
		<param name="coordinateSystem" value="Atlantis" />

		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="8" />

		<param name="randomSeed" value="4711" />
	</module>

<!-- ====================================================================== -->

	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="linkStats" >

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />

		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="network" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="astra_network.xml.gz" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>

<!-- ====================================================================== -->

	<module name="parallelEventHandling" >

		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />

		<!-- Number of threads for parallel events handler. 0 or null means the framework decides by itself. -->
		<param name="numberOfThreads" value="null" />

		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />

		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>

<!-- ====================================================================== -->

	<module name="planCalcScore" >

		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="1.0" />

		<param name="PathSizeLogitBeta" value="1.0" />

		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />

		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />

		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />

		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />

			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="uniform" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="car" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="pt" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="walk" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="bike" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="ride" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="other" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="0.0" />

				<param name="mode" value="outside" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="plans" >

		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="astra_population_attributes.xml.gz" />

		<param name="inputPlansFile" value="astra_population.xml.gz" />

		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />

		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />

		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>

<!-- ====================================================================== -->

	<module name="planscalcroute" >

		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="3.611111111111111" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.2" />
			<param name="mode" value="walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="1.3888888888888888" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="outside" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="1.0E7" />
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="ptCounts" >

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />

		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />

		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />

		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="qsim" >
		<param name="endTime" value="30:00:00" />
		<param name="flowCapacityFactor" value="7.000000000000001E-4" />

		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />

		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />

		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />

		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />

		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />

		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />

		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />

		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="8" />

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />

		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />

		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="onlyUseEndtime" />

		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />

		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />

		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="undefined" />
		<param name="storageCapacityFactor" value="100000.0" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="108000.0" />

		<param name="timeStepSize" value="00:00:01" />

		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />

		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />

		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />

		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />

		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />

		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />

		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>

<!-- ====================================================================== -->

	<module name="r5" >
		<param name="coordinateSystem" value="CH1903_LV03_Plus" />
		<param name="networkInputPath" value="r5_network.dat" />
		<param name="requestDay" value="2017-10-03" />
		<param name="requestTimezone" value="+02:00" />
	</module>

<!-- ====================================================================== -->

	<module name="scenario" >
	</module>

<!-- ====================================================================== -->

	<module name="strategy" >

		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />

		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />

		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />

		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />

		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />

		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ChangeExpBeta" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.9" />
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="subtourModeChoice" >

		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />

		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />

		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>

<!-- ====================================================================== -->

	<module name="transit" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />

		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />

		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />

		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />

		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />

		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />

		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="transitRouter" >

		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />

		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />

		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />

		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />

		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>

<!-- ====================================================================== -->

	<module name="travelTimeCalculator" >

		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />

		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />

		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />

		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />

		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />

		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />

		<!-- possible values: nullTravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />

		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>

<!-- ====================================================================== -->

	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="vspExperimental" >

		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />

		<param name="isGeneratingBoardingDeniedEvent" value="false" />

		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />

		<param name="logitScaleParamForPlansRemoval" value="1.0" />

		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />

		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>

<!-- ====================================================================== -->

</config>

2017-12-05 13:55:52,164  INFO ControlerUtils:63 Complete config dump done.
2017-12-05 13:55:52,164  INFO ControlerUtils:64 Checking consistency of config...
2017-12-05 13:55:52,165  INFO PlanCalcScoreConfigGroup$ScoringParameterSet:1182 NO OPENING OR CLOSING TIMES DEFINED!


There is no activity type that has an opening *and* closing time (or opening time and late penalty) defined.
This usually means that the activity chains can be shifted by an arbitrary
number of hours without having an effect on the score of the plans, and thus
resulting in wrong results / traffic patterns.
If you are using MATSim without time adaptation, you can ignore this warning.



2017-12-05 13:55:52,165  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2017-12-05 13:55:52,166 ERROR MatsimRuntimeModifications:54 Getting uncaught Exception in Thread main
java.lang.RuntimeException: Unmaterialized config group: astra
	at org.matsim.core.config.consistency.UnmaterializedConfigGroupChecker.checkConsistency(UnmaterializedConfigGroupChecker.java:11)
	at org.matsim.core.config.Config.checkConsistency(Config.java:228)
	at org.matsim.core.controler.ControlerUtils.checkConfigConsistencyAndWriteToLog(ControlerUtils.java:65)
	at org.matsim.core.controler.AbstractController$1.run(AbstractController.java:89)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:48)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:31)
	at org.matsim.core.controler.AbstractController.run(AbstractController.java:99)
	at org.matsim.core.controler.NewControler.run(NewControler.java:79)
	at org.matsim.core.controler.Controler.run(Controler.java:205)
	at org.matsim.run.RunMatsim.main(RunMatsim.java:51)
2017-12-05 13:55:52,167  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2017-12-05 13:55:52,167 ERROR MatsimRuntimeModifications:60 ERROR --- This is an unexpected shutdown!
2017-12-05 13:55:52,167 ERROR MatsimRuntimeModifications:63 Shutdown possibly caused by the following Exception:
java.lang.RuntimeException: Unmaterialized config group: astra
	at org.matsim.core.config.consistency.UnmaterializedConfigGroupChecker.checkConsistency(UnmaterializedConfigGroupChecker.java:11)
	at org.matsim.core.config.Config.checkConsistency(Config.java:228)
	at org.matsim.core.controler.ControlerUtils.checkConfigConsistencyAndWriteToLog(ControlerUtils.java:65)
	at org.matsim.core.controler.AbstractController$1.run(AbstractController.java:89)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:48)
	at org.matsim.core.controler.MatsimRuntimeModifications.run(MatsimRuntimeModifications.java:31)
	at org.matsim.core.controler.AbstractController.run(AbstractController.java:99)
	at org.matsim.core.controler.NewControler.run(NewControler.java:79)
	at org.matsim.core.controler.Controler.run(Controler.java:205)
	at org.matsim.run.RunMatsim.main(RunMatsim.java:51)
2017-12-05 13:55:52,168  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2017-12-05 13:55:52,168  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.DumpDataAtEndImpl
2017-12-05 13:55:52,168  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2017-12-05 13:55:52,171  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2017-12-05 13:55:52,175  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2017-12-05 13:55:52,177  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2017-12-05 13:55:52,177 ERROR MatsimRuntimeModifications:78 ERROR --- MATSim unexpectedly terminated. Please check the output or the logfile with warnings and errors for hints.
2017-12-05 13:55:52,177 ERROR MatsimRuntimeModifications:79 ERROR --- results should not be used for further analysis.
2017-12-05 13:55:52,178  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2017-12-05 13:55:52,178 ERROR MatsimRuntimeModifications:83 ERROR --- This was an unexpected shutdown! See the log file for a possible reason.
